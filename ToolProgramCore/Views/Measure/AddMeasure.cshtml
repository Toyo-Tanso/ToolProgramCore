@model ToolProgramCore.Models.ToolMeasure

@{
    ViewData["Title"] = "Add Measure";
}

@{
    // Declare a list of double values
    List<double> values_S_Size = new List<double>();
    // Loop from 0 to 20 with a step of 0.5
    values_S_Size.Add(0.5);
    for (double i = 0; i <= 20; i += 1)
    {
        // Add the value to the list
        values_S_Size.Add(i);
    }
}

@{
    // Declare a list of double values
    List<double> values_Condition = new List<double>();
    // Loop from 0 to 20 with a step of 0.5
    
    for (double i = -5; i <= 5; i += 0.5)
    {
        // Add the value to the list
        values_Condition.Add(i);
    }
}

<h1>Add a Measure</h1>

<h4>Tool Measure</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddMeasure">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group visually-hidden">
                <label asp-for="ID" class="control-label"></label>
                <input asp-for="ID" class="form-control" />
                <span asp-validation-for="ID" class="text-danger"></span>
            </div>
            <div class="form-group visually-hidden">
                <label asp-for="T_Date" class="control-label"></label>
                <input asp-for="T_Date" class="form-control" data-format="dd/MM/yyyy HH:mm:ss PP"
                />
                <span asp-validation-for="T_Date" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="T_Date" class="control-label"></label>
                <input asp-for="T_Date" disabled="true" class="form-control" data-format="dd/MM/yyyy HH:mm:ss PP"
                />
                <span asp-validation-for="T_Date" class="text-danger"></span>
            </div>
        
       
            @*<button id="toggle-button">Custom Time</button>*@
            <div class="form-group">
                <label asp-for="WC">Work Center</label>
                <input asp-for="WC" class="form-control" list="Work_Center" placeholder="Type to search...">
                <datalist id="Work_Center">
                        @if (!(Model is null))
                        {
                            foreach (var wc in Model.WCdropDownList)
                            {
                            <option value="@wc[0].Trim()">
                                @(wc[2] != null && !wc[2].Trim().Equals("") ? wc[2] : (wc[1] == null ? "" : wc[1]))
                            </option>
                            }
                        }
                </datalist>
                </input asp-for>
                
                <span asp-validation-for="WC" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                <label asp-for="WC" class="control-label"></label>
                <input asp-for="WC" class="form-control" />
                <span asp-validation-for="WC" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <label asp-for="ToolNo" class="control-label"></label>
                <input asp-for="ToolNo" class="form-control" value="TTU "  list="Tool_Data">
                    <datalist id="Tool_Data">
                            @if (!(Model is null))
                            {
                                foreach (var tool_lst in Model.ToolNoDropDownList)
                                { 

                                <option value="@tool_lst[1]">@(tool_lst[2])</option>
                                }
                            }
                    </datalist>
                </input>
                <span asp-validation-for="ToolNo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EmpNo" class="control-label"></label>
                <input asp-for="EmpNo" class="form-control" list="Emp_Data" >
                <datalist id="Emp_Data">
                        @if (!(Model is null))
                        {
                            foreach (var emp_lst in Model.EmplDropDownList)
                            {
                            <option value="@emp_lst[1].Trim()">@(emp_lst[0].Split(',')[1].Trim() + " " + emp_lst[0].Split(',')[0])</option>
                            }
                        }
                </datalist>
                </dropdown asp-for>
                <span asp-validation-for="EmpNo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="S_Size" class="control-label"></label>
                <input asp-for="S_Size" class="form-control" type="number" step="0.1"
                list="S_Size_lst">

                <datalist id="S_Size_lst">                
            
                        @foreach (double value in values_S_Size)
                        {
                            // Create an option element with the value and text
                            <option value="@value">@value</option>
                        }
                </dataList>
                </input>
                   
                <span asp-validation-for="S_Size" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label asp-for="Condition" class="control-label"></label>
                <input asp-for="Condition" class="form-control" type="number" step="0.1" list="Condition_lst">
                
                <datalist id="Condition_lst">                
            
                        @foreach (double value in values_Condition)
                        {
                            // Create an option element with the value and text
                            <option value="@value">@value</option>
                        }
                </dataList>
                
                </input>
                <span asp-validation-for="Condition" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Add Measure" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="mt-2">
    <a asp-action="Index">Back to List</a>
</div>
<script>
  // Get the button element by its id
  var button = document.getElementById("toggle-button");

  // Add a click event listener to the button
  button.addEventListener("click", function() {
    // Get all the div elements with the class form-group
    var formGroups = document.querySelectorAll(".form-group");

    // Loop through each div element
    for (var i = 1; i < 2; i++) {
      // Get the current div element
      var formGroup = formGroups[i];

      // Toggle the class visually-hidden on the div element
      formGroup.classList.toggle("visually-hidden");
    }
    if(button.textContent === "Hide"){
        button.textContent = "Custom Time"
    }
    else {
        button.textContent = "Hide"
    }
    
  });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
