@model ToolProgramCore.Models.ToolTracker

@{
    ViewData["Title"] = "Check Out";
}

<div class="d-flex mt-4 mb-3 ">

    <div class="w-auto me-5">
        <h1 class="mt-2">Check Out Tool</h1>

        <h4>Tool Tracker</h4>

    </div>

    <div class="w-auto ms-5">
        <div class="d-flex align-items-center ms-1">
            <img alt="Icon" class="img-fluid" width="100" src="~/Images/checkOut.png" />
        </div>
    </div>


</div>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="CheckOut">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="ToolNo" class="control-label"></label>
                @*TODO ADD validation for tool*@
                @*TODO add validation for if it has a valid WC*@
                <input asp-for="ToolNo" id="tool" class="form-control" onblur="getWC()" value="TTU " list="Tool_Data">
                <datalist id="Tool_Data">
                    @if (!(Model is null) && Model.ToolNoDropDownList is not null)
                    {
                        foreach (var tool_lst in Model.ToolNoDropDownList)
                        {

                            <option value="@tool_lst[1]">@(tool_lst[2])</option>
                        }
                    }
                </datalist>
                <span asp-validation-for="ToolNo" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Promise_Return_Date" class="control-label"></label>
                <input asp-for="Promise_Return_Date" class="form-control" />
                <span asp-validation-for="Promise_Return_Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WC_From" class="control-label"></label>
                <input asp-for="WC_From" id="wc" class="form-control" readonly="readonly" />
                <span asp-validation-for="WC_From" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WC_To" class="control-label"></label>
                <input asp-for="WC_To" class="form-control" id="wc" list="Work_Center" placeholder="Type to search..." />
                <datalist id="Work_Center">
                    @if (!(Model is null) && Model.WCdropDownList != null)
                    {
                        foreach (var wc in Model.WCdropDownList)
                        {
                            <option value="@wc[0].Trim()">
                                @(wc[2] != null && !wc[2].Trim().Equals("") ? wc[2] : (wc[1] == null ? "" : wc[1]))
                            </option>
                        }
                    }
                </datalist>
                <span asp-validation-for="WC_To" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label asp-for="EmpNo" class="control-label"></label>
                <input asp-for="EmpNo" class="form-control" list="Emp_Data" />
                <datalist id="Emp_Data">
                    @if (!(Model is null) && Model.EmplDropDownList != null)
                    {
                        foreach (var emp_lst in Model.EmplDropDownList)
                        {
                            <option value="@emp_lst[1].Trim()">@(emp_lst[0].Split(',')[1].Trim() + " " + emp_lst[0].Split(',')[0])</option>
                        }
                    }
                </datalist>
                <span asp-validation-for="EmpNo" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Check Out" class="btn btn-primary buttonOrange" />
            </div>
            @Html.AntiForgeryToken()
        </form>
    </div>
</div>

<div class="mt-2">
    <a asp-action="Index">Back to List</a>
</div>



<script>
    var ToolInput = document.getElementById("tool");

    // Execute a function when the user presses a key on the keyboard
    ToolInput.addEventListener("keypress", function (event) {
        // If the user presses the "Enter" key on the keyboard
        if (event.key === "Enter") {
            // Cancel the default action, if needed
            event.preventDefault();

            getWC();
        }
    });

    function getWC() {
        // Get the tool value from the input

        var toolValue = $("#tool").val();

        // TODO: can maybe used to pass in lists //var LocationsList = $("#toolListRaw").value

        // Check if the tool value len is greater than "TTU "
        if (toolValue.length > 5) {

            // run helper function in contoller to auto enter WC based on tool
            $.ajax({
                type: "POST",
                data: {
                    Tool: toolValue
                },
                url: 'GetWC',
            }).done(function (result) {
                $("#wc").val(result);
            });
        }
        else {
            //alert("Tool too short");
        }
    }

    

    

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
